

namespace ConsoleApp
{
    // Define an interface called IQuittablepublic interface IQuittable
    {
        // Declare a method called Quit with a void return type
        void Quit();
    }

    // Define an Employee class that inherits from IQuittable
    class Employee : IQuittablepublic interface IQuittable
    {
        // Define a void method called Quit()
        void Quit();
    }

    // Define an Employee class that inherits the IQuittable interface
    public class Employee : IQuittable
    {
        // Create some properties for the Employee class
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public int EmployeeID { get; set; }

        // Implement the Quit() method from the IQuittable interface
        public void Quit()
        {
            Console.WriteLine($"Employee {FirstName} {LastName} with ID {EmployeeID} has quit.");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Create an Employee object
            Employee employee = new Employee()
            {
                FirstName = "John",
                LastName = "Doe",
                EmployeeID = 123
            };

            // Create an object of type IQuittable using polymorphism
            IQuittable quittable = employee;

            // Call the Quit() method on the IQuittable object
            quittable.Quit();

            Console.ReadLine();
        }
    }
}
```

The code above defines an interface called IQuittable that has a method called Quit(). The Employee class inherits from this interface and implements the Quit() method to output a message to the console indicating that the employee has quit. In the Main method, an Employee object is created and then an object of type IQuittable is created using polymorphism and assigned to the Employee object. Finally, the Quit() method is called on the IQuittable object to output the message to the console. 
